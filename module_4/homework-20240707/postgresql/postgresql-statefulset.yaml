# homework-20240707/postgresql/postgresql-statefulset.yaml

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: default
spec:
  serviceName: "postgresql"
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "postgresql-role"
        vault.hashicorp.com/agent-inject-secret-admin: "secret/data/postgresql/admin"
        vault.hashicorp.com/agent-inject-template-POSTGRES_PASSWORD: |
          {{- with secret "secret/data/postgresql/admin" -}}
          POSTGRES_PASSWORD={{ .Data.data.password }}
          {{- end }}
    spec:
      serviceAccountName: demo-user
      terminationGracePeriodSeconds: 10
      containers:
        - name: postgres
          image: postgres:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          command: ["/bin/sh"]
          args: ["-c", "chmod +x /scripts/start_postgres.sh && /scripts/start_postgres.sh"]
          env:
            # Control over the location of data inside the container
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            # Indicate to Kubernetes where the persistent volume should be connected
            # that after a restart you don’t lose data
            - name: postgredb
              mountPath: /var/lib/postgresql/data
              readOnly: false
            - name: custom-scripts
              mountPath: /scripts  # Mounting a volume containing scripts, including start_postgres.sh.
#            - name: vault-secrets
#              mountPath: /vault/secrets  # Mounting a volume for injected secrets из Vault.
      volumes:
        - name: custom-scripts
          configMap:
            name: postgres-scripts  # ConfigMap, containing user scripts such as start_postgres.sh.
#        - name: vault-secrets
#          emptyDir: { }
  volumeClaimTemplates:
    - metadata:
        name: postgredb
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 3Gi


