# homework-20240707/postgresql-variant-1/postgresql-statefulset.yaml

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: default
spec:
  serviceName: "postgresql"
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "yourhostel-role"
        vault.hashicorp.com/agent-inject-secret-postgres-password: "secret/data/postgresql/admin"
        vault.hashicorp.com/agent-inject-template-postgres-password: |
          {{- with secret "secret/data/postgresql/admin" -}}
          {{ .Data.data.password }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-postgres-username: |
          {{- with secret "secret/data/postgresql/admin" -}}
          {{ .Data.data.username }}
          {{- end }}
    spec:
      serviceAccountName: yourhostel-user
      terminationGracePeriodSeconds: 10
      containers:
        - name: postgres
          image: postgres:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          command: [ "/bin/sh", "-c" ]
          args:
            - |
              if [ ! -s "$PGDATA/PG_VERSION" ]; then
                initdb -D "$PGDATA" --username=$(cat /vault/secrets/postgres-username) --pwfile=/vault/secrets/postgres-password
              fi &&
              exec postgres
          env:
            # Control over the location of data inside the container
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_PASSWORD_FILE
              value: /vault/secrets/postgres-password
            - name: POSTGRES_USER_FILE
              value: /vault/secrets/postgres-username
          volumeMounts:
            # Indicate to Kubernetes where the persistent volume should be connected
            # that after a restart you donâ€™t lose data
            - name: postgredb
              mountPath: /var/lib/postgresql/data
              readOnly: false
          securityContext:
            #Pod-level security context
            #fsGroup: 999
            # Security at the individual container level
            runAsUser: 999  # UID user postgres
            runAsGroup: 999  # GID user postgres
  volumeClaimTemplates:
    - metadata:
        name: postgredb
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi


