# homework-20240707/yourhostel-vault-install.yaml

apiVersion: v1
kind: Namespace
metadata:
  name: yourhostel-vault
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-installer-sa
  namespace: yourhostel-vault
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault-installer-role
rules:
- apiGroups: [""]
  resources: ["serviceaccounts", "pods", "pods/log", "secrets", "configmaps"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "clusterrolebindings"]
  verbs: ["get", "list", "watch", "create", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-installer-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-installer-role
subjects:
- kind: ServiceAccount
  name: vault-installer-sa
  namespace: yourhostel-vault
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-install
  namespace: yourhostel-vault
spec:
  template:
    spec:
      serviceAccountName: vault-installer-sa
      containers:
      - name: vault-install
        image: alpine
        command: ["/bin/sh", "-c"]
        args:
        - |
          apk add --no-cache curl openssl && \
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 && \
          chmod 700 get_helm.sh && \
          VERIFY_CHECKSUM=false sh get_helm.sh && \
          helm repo add hashicorp https://helm.releases.hashicorp.com && \
          helm repo update && \
          helm install yourhostel-vault hashicorp/vault --namespace yourhostel-vault && \
          kubectl wait --for=condition=available --timeout=600s deployment/yourhostel-vault --namespace yourhostel-vault
      restartPolicy: OnFailure






